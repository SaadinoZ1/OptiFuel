// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptiFuel.Data;

#nullable disable

namespace OptiFuel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240802101937_UpdateCentre")]
    partial class UpdateCentre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OptiFuel.Models.Centre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("e_created_on")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("e_updated_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("centres");
                });

            modelBuilder.Entity("OptiFuel.Models.Commission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodeG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ValidationBLId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("e_created_on")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("e_updated_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("ValidationBLId");

                    b.ToTable("Commissions");
                });

            modelBuilder.Entity("OptiFuel.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Télephone")
                        .HasColumnType("int");

                    b.Property<DateTime>("e_created_on")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("e_updated_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("contacts");
                });

            modelBuilder.Entity("OptiFuel.Models.Dechargement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cuve")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DeliveryVolume")
                        .HasColumnType("float");

                    b.Property<double>("LevelEnd")
                        .HasColumnType("float");

                    b.Property<double>("LevelStart")
                        .HasColumnType("float");

                    b.Property<Guid>("ValidationBLId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("e_created_on")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("e_updated_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ValidationBLId");

                    b.ToTable("Dechargements");
                });

            modelBuilder.Entity("OptiFuel.Models.Planning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Centre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("QuantiteALivrer")
                        .HasColumnType("int");

                    b.Property<DateTime>("e_created_on")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("e_updated_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Plannings");
                });

            modelBuilder.Entity("OptiFuel.Models.ValidationBL", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("BLFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("CertificatJumelageFile")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PlanningId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("QuantitésBL")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("e_created_on")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("e_updated_on")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PlanningId")
                        .IsUnique();

                    b.ToTable("validationBLs");
                });

            modelBuilder.Entity("OptiFuel.Models.Commission", b =>
                {
                    b.HasOne("OptiFuel.Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OptiFuel.Models.ValidationBL", "ValidationBL")
                        .WithMany("Commissions")
                        .HasForeignKey("ValidationBLId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");

                    b.Navigation("ValidationBL");
                });

            modelBuilder.Entity("OptiFuel.Models.Dechargement", b =>
                {
                    b.HasOne("OptiFuel.Models.ValidationBL", "ValidationBL")
                        .WithMany("Dechargements")
                        .HasForeignKey("ValidationBLId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ValidationBL");
                });

            modelBuilder.Entity("OptiFuel.Models.ValidationBL", b =>
                {
                    b.HasOne("OptiFuel.Models.Planning", "Planning")
                        .WithOne("ValidationBL")
                        .HasForeignKey("OptiFuel.Models.ValidationBL", "PlanningId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planning");
                });

            modelBuilder.Entity("OptiFuel.Models.Planning", b =>
                {
                    b.Navigation("ValidationBL");
                });

            modelBuilder.Entity("OptiFuel.Models.ValidationBL", b =>
                {
                    b.Navigation("Commissions");

                    b.Navigation("Dechargements");
                });
#pragma warning restore 612, 618
        }
    }
}
